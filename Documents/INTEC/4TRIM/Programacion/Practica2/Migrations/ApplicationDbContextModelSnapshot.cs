// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Practica2;

namespace Practica2.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Practica2.Gasto", b =>
                {
                    b.Property<string>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descripcion");

                    b.Property<string>("FechaRegistro");

                    b.Property<string>("IngresoAsociadoID");

                    b.Property<double>("Monto");

                    b.Property<int?>("ProcedenciaID");

                    b.Property<int>("TipoTransaccion");

                    b.Property<int?>("UsuarioId");

                    b.HasKey("ID");

                    b.HasIndex("IngresoAsociadoID");

                    b.HasIndex("ProcedenciaID");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Gasto");
                });

            modelBuilder.Entity("Practica2.Ingreso", b =>
                {
                    b.Property<string>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descripcion");

                    b.Property<string>("FechaEstimada");

                    b.Property<string>("FechaRegistro");

                    b.Property<double>("Monto");

                    b.Property<int?>("ProcedenciaID");

                    b.Property<int>("TipoTransaccion");

                    b.Property<int?>("UsuarioId");

                    b.HasKey("ID");

                    b.HasIndex("ProcedenciaID");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Ingreso");
                });

            modelBuilder.Entity("Practica2.Procedencia", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre");

                    b.HasKey("ID");

                    b.ToTable("Procedencia");
                });

            modelBuilder.Entity("Practica2.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido");

                    b.Property<string>("Nombre");

                    b.HasKey("Id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Practica2.Gasto", b =>
                {
                    b.HasOne("Practica2.Ingreso", "IngresoAsociado")
                        .WithMany()
                        .HasForeignKey("IngresoAsociadoID");

                    b.HasOne("Practica2.Procedencia", "Procedencia")
                        .WithMany()
                        .HasForeignKey("ProcedenciaID");

                    b.HasOne("Practica2.Usuario")
                        .WithMany("Gastos")
                        .HasForeignKey("UsuarioId");
                });

            modelBuilder.Entity("Practica2.Ingreso", b =>
                {
                    b.HasOne("Practica2.Procedencia", "Procedencia")
                        .WithMany()
                        .HasForeignKey("ProcedenciaID");

                    b.HasOne("Practica2.Usuario")
                        .WithMany("Ingresos")
                        .HasForeignKey("UsuarioId");
                });
#pragma warning restore 612, 618
        }
    }
}
